import{i as p,p as i,o as s,f as a,b as c,t as u,r as d,A as m,m as _,k as f}from"./app-ZbNT53_g.js";const b={class:"text-sm text-red-600"},k={__name:"InputError",props:{message:{type:String}},setup(e){return(o,t)=>p((s(),a("div",null,[c("p",b,u(e.message),1)],512)),[[i,e.message]])}},g={class:"block font-medium text-sm text-gray-700"},x={key:0},v={key:1},$={__name:"InputLabel",props:{value:{type:String}},setup(e){return(o,t)=>(s(),a("label",g,[e.value?(s(),a("span",x,u(e.value),1)):(s(),a("span",v,[d(o.$slots,"default")]))]))}},h=["value"],S=m({__name:"TextInput",props:{modelValue:{}},emits:["update:modelValue"],setup(e,{expose:o}){const t=_(null);return f(()=>{t.value.hasAttribute("autofocus")&&t.value.focus()}),o({focus:()=>t.value.focus()}),(n,r)=>(s(),a("input",{class:"border-2 border-transparent p-[7px] rounded-xl focus:pl-[15px] duration-[.25s] text-[13.3px] transition-all outline-none focus:placeholder:opacity-0 placeholder:transition-all focus:border-b-lime-600 text-[rgb(44,62,80)] focus:bg-[rgb(240,243,244)] bg-[rgb(241,244,245)]",value:n.modelValue,onInput:r[0]||(r[0]=l=>n.$emit("update:modelValue",l.target.value)),ref_key:"input",ref:t},null,40,h))}});export{$ as _,S as a,k as b};
